plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
	implementation 'io.github.cdimascio:dotenv-java:2.3.2'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Custom task to run the application with .env support
task runLocal(type: JavaExec) {
	description = 'Runs the application locally with .env file support'
	group = 'application'

	mainClass = 'com.example.data_fetching_service.DataFetchingServiceApplication'
	classpath = sourceSets.main.runtimeClasspath

	// Pass system properties to the application
	systemProperties System.properties
}
