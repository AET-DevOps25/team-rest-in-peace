version: '3.8'

services:
  client:
    build: client
    image: ghcr.io/aet-devops25/team-rest-in-peace/client:latest
    container_name: client
    env_file:
      - .env
    expose:
      - "3000"
    healthcheck:
      test: "curl -f localhost:3000/health.html"
      start_period: 5s

  db:
    image: ghcr.io/aet-devops25/team-rest-in-peace/database:latest
    build: database
    container_name: db
    env_file:
      - .env
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      start_period: 10s


  data-fetching-service:
    image: ghcr.io/aet-devops25/team-rest-in-peace/data-fetching-service:latest
    build: data-fetching-service
    container_name: data-fetching-service
    env_file:
      - .env
    expose:
      - "8080"
    healthcheck:
      test: "curl -f localhost:8080/health"
      start_period: 5s
    depends_on:
      - db


  initial-data-fetch:
    image: curlimages/curl:7.85.0
    depends_on:
      data-fetching-service:
        condition: service_healthy
    command: [ "curl", "-X", "GET", "http://data-fetching-service:8080/fetch?f.datum.start=2025-07-01&f.wahlperiode=21" ]
    restart: "no"

  browsing-service:
    image: ghcr.io/aet-devops25/team-rest-in-peace/browsing-service:latest
    build: browsing-service
    container_name: browsing-service
    env_file:
      - .env
    expose:
      - "8081"
    healthcheck:
      test: "curl -f localhost:8081/health"
      start_period: 5s
    depends_on:
      - db

  notification-service:
    image: ghcr.io/aet-devops25/team-rest-in-peace/notification-service:latest
    build: notification-service
    container_name: notification-service
    env_file:
      - .env
    expose:
      - "8082"
    healthcheck:
      test: "curl -f localhost:8082/health"
      start_period: 5s
    depends_on:
      - db

  genai-service:
    image: ghcr.io/aet-devops25/team-rest-in-peace/genai-service:latest
    build: genai-service
    container_name: genai-service
    env_file:
      - .env
    expose:
      - "8000"
    healthcheck:
      test: [ "CMD-SHELL", "python3 app/healthcheck.py" ]
      start_period: 5s
    depends_on:
      - db

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - client
      - data-fetching-service
      - browsing-service
      - notification-service
      - grafana

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    expose:
      - "9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - genai-service
      - data-fetching-service
      - browsing-service
      - notification-service

  grafana:
    image: grafana/grafana
    container_name: grafana
    expose:
      - "3000"
    environment:
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/dev/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    depends_on:
      - prometheus
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  grafana-storage:
